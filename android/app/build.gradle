def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    // def keystoreProperties = new Properties()
    // def keystorePropertiesFile = rootProject.file('key.properties')
    // if (keystorePropertiesFile.exists()) {
    //     keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    // }
    
    compileSdkVersion 31

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        multiDexEnabled true
        applicationId "com.seabird.movietrailer"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 7
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    // buildTypes {
    //     release {
    //         // TODO: Add your own signing config for the release build.
    //         // Signing with the debug keys for now, so `flutter run --release` works.
    //         minifyEnabled true
    //         shrinkResources true
    //         useProguard true
    //         proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            
    //     }
    // }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
